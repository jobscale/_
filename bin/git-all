#!/usr/bin/env bash
 set -eu

Config() {
  ApiGit="https://api.github.com/users/jobscale/repos?type=all&sort=updated&page="
  if [[ $(hostname) == focal ]]
  then
    TYPE="ssh_url"
  else
    TYPE="clone_url"
  fi
}
Config

gitClone() {
  echo "$repo" | jq .
  name=$(echo $repo | jq --raw-output .name)
  url=$(echo $repo | jq --raw-output .url)
  [[ ! -d $name ]] && git clone $url
  [[ ! -d $name ]] && echo "$name not found" && return
  cd $name
  git pull
  git-user
  git branch -a | head
  git diff | cat
  cd - > /dev/null
}

gitDiff() {
  echo "$repo" | jq .
  name=$(echo $repo | jq --raw-output .name)
  url=$(echo $repo | jq --raw-output .url)
  [[ ! -d $name ]] && echo "$name not found" && return
  cd $name
  git remote set-url origin $repo
  git pull
  git diff | cat
  cd - > /dev/null
}

Loop() {
  IFS=$'\n'
  echo -e "\n$(date +"%F %H:%M:%S.%3N") [START]\n"
  for i in {1..5}
  do
    for repo in $(curl -s "$ApiGit$i" | jq -c ".[] | { name: .name, url: .$TYPE }")
    do
      $1
    done
  done
  echo -e "\n$(date +"%F %H:%M:%S.%3N") [FINISH]\n"
}

Main() {
  if [[ $# == 0 ]]
  then
    echo "Usage: ${0##*/} [command]"
    echo "[command]:"
    THIS=${0##*/}
    grep ^[a-z] $(which "$THIS" || echo "$THIS") | awk -F'(' '{print $1}'
    return 1
  fi

  LOG_FILE=$(date '+/tmp/%s')
  Loop $1 | tee $LOG_FILE
  echo "log file = $LOG_FILE"
}
Main $*
