#!/usr/bin/env bash
set -eux

export DEBIAN_FRONTEND=noninteractive

debian-2022() {
  apt-get update && apt-get install -y --no-install-recommends \
    apt-transport-https
  apt-get update && apt-get install -y --no-install-recommends \
    software-properties-common ca-certificates gnupg

  echo ${ID,,} ${VERSION_CODENAME}
  curl -fsSL https://download.docker.com/linux/${ID,,}/gpg | apt-key add -
  add-apt-repository "deb https://download.docker.com/linux/${ID,,} ${VERSION_CODENAME} stable"
  apt-get update && apt-get install -y --no-install-recommends \
    docker-ce
  echo -- sudo usermod -aG docker \$\(whoami\)
}

debian-2023() {
  apt-get update && apt-get install -y --no-install-recommends \
    apt-transport-https
  apt-get update && apt-get install -y --no-install-recommends \
    software-properties-common ca-certificates gnupg

  echo ${ID,,} ${VERSION_CODENAME}
  curl -fsSL https://download.docker.com/linux/${ID,,}/gpg | gpg --dearmor -o /usr/share/keyrings/docker.gpg
  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker.gpg] https://download.docker.com/linux/debian ${VERSION_CODENAME} stable" | tee /etc/apt/sources.list.d/docker-${VERSION_CODENAME}.list > /dev/null
  apt update && apt-get install -y --no-install-recommends \
    docker-ce
  echo -- sudo usermod -aG docker \$\(whoami\)
}

debian-2025() {
  apt-get update && apt-get install -y --no-install-recommends \
    apt-transport-https
  apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates gnupg

  echo ${ID,,} ${VERSION_CODENAME}
  curl -fsSL https://download.docker.com/linux/${ID,,}/gpg | gpg --dearmor -o /usr/share/keyrings/docker.gpg
  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker.gpg] https://download.docker.com/linux/debian ${VERSION_CODENAME} stable" | tee /etc/apt/sources.list.d/docker-${VERSION_CODENAME}.list > /dev/null
  apt update && apt-get install -y --no-install-recommends \
    docker-ce
  echo -- sudo usermod -aG docker \$\(whoami\)
}

ubuntu() {
  apt-get update && apt-get install -y --no-install-recommends \
    apt-transport-https
  apt-get update && apt-get install -y --no-install-recommends \
    software-properties-common ca-certificates gnupg

  echo ${ID,,} ${VERSION_CODENAME}
  curl -fsSL https://download.docker.com/linux/${ID,,}/gpg | apt-key add -
  add-apt-repository "deb https://download.docker.com/linux/${ID,,} ${VERSION_CODENAME} stable"
  apt-get update && apt-get install -y --no-install-recommends \
    docker-ce
  echo -- sudo usermod -aG docker \$\(whoami\)
}

kali-rolling() {
  apt-get update && apt-get install -y --no-install-recommends \
    apt-transport-https
  apt-get update && apt-get install -y --no-install-recommends \
    software-properties-common ca-certificates gnupg

  echo ${ID,,} ${VERSION_CODENAME}
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
  add-apt-repository "deb https://download.docker.com/linux/ubuntu jammy stable"
  apt-get update
  apt-get install -y --no-install-recommends \
    docker-ce
  echo -- sudo usermod -aG docker \$\(whoami\)
}

main() {
  start() {
    echo "$(date --rfc-3339=seconds) [INFO] START  docker for $VERSION_CODENAME"
  }
  finish() {
    echo "$(date --rfc-3339=seconds) [INFO] FINISH docker for $VERSION_CODENAME"
  }
  trap 'finish' EXIT
  start

  echo "$(lsb_release -a 2>/dev/null || echo "$(date --rfc-3339=seconds) [WARN] No LSB modules are available.")"
  . /etc/os-release

  case "$VERSION_CODENAME" in
    trixie)
      debian-2025
      ;;
    bookworm)
      debian-2023
      ;;
    bullseye|buster)
      debian-2022
      ;;
    noble|jammy|focal)
      ubuntu
      ;;
    kali-rolling)
      kali-rolling
      ;;
    *)
      echo "$(date --rfc-3339=seconds) [FAIL] Unsupported distribution: $VERSION_CODENAME"
      exit 1
      ;;
  esac
}

main "$@"
