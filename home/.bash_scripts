mkcd() {
  mkdir $1 && cd $_
}

b() {
  sudo cp -pr $1{,.B-$(date +'%Y%m%d%H%M%S')} && echo "backuped --- $1.B-$(date +'%Y%m%d%H%M%S')"
}

docker() {
  if [[ $@ == "ps -a" ]]
  then
    cmd="docker ps -a --format 'table {{.ID}}\t{{.Names}}\t{{.Image}}\t{{.Status}}'"
    echo "$cmd"
    bash -c "$cmd"
    return
  fi
  if [[ $@ == "ps" ]]
  then
    cmd="docker ps --format 'table {{.ID}}\t{{.Names}}\t{{.Image}}\t{{.Status}}'"
    echo "$cmd"
    bash -c "$cmd"
    return
  fi
  command docker "$@"
}

VBoxManage() {
  if [[ $@ == "list vms" ]]
  then
    cmd='VBoxManage list vms --long | grep -e Name: -e State: -e Rule'
    echo "$cmd"
    bash -c "$cmd"
    return
  fi
  command VBoxManage "$@"
}

git() {
  if [[ $1 == "clone" && $2 == "--depth" ]]
  then
    shift
    cmd="git clone --depth 1 $4"
    echo "$cmd"
    command $cmd
    return
  fi
  if [[ $1 == "sort" ]]
  then
    cmd="git ls-remote --tags | sort -t '/' -k 3 -V"
    echo "$cmd"
    bash -c "$cmd"
    return
  fi
  if [[ $@ == "branch -a" ]]
  then
    cmd="git fetch --all --prune --tags"
    echo "$cmd"
    command $cmd
    cmd="git branch -a -vv"
    echo "$cmd"
    command $cmd
    return
  fi
  if [[ $@ == "log --all" ]]
  then
    cmd="git --no-pager log --simplify-by-decoration --tags --branches --remotes --date-order --decorate --pretty=tformat:'%Cblue %h %Creset %<(25)%ci %C(auto)%d%Creset %s'"
    echo "$cmd"
    command $cmd
  fi
  command git "$@"
}

realdir() {
  if [ "-bash" == "$0" ]
  then
    pwd
    return
  fi
  dir=$(dirname "$0")
  if [ -d "$dir" ]
  then
    echo $(cd "$dir" && pwd)
  else
    pwd
  fi
}

skip() {
  for i in $(seq 1 $1)
  do
    echo
  done
}

loop() {
  for i in $(seq $1 -1 1)
  do
    printf '\r%5d ' $i
    sleep 1
  done
  printf '\r%5d\n' 0
}

gff() {
  while read file
  do
    grep $@ "${file}"
  done < <(ff)
}

tree_html() {
  tree -L 3 -H . $PWD -o tree.html
  open tree.html
}

less_with_unbuffer () {
  unbuffer "$@" 2>&1 | less -SR
}