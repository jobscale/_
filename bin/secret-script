#!/usr/bin/env bash

SECRET_KEY_NAME="private.key"
PUBLIC_KEY_NAME="public.key"

generateRSAKeyPair() {
  echo "WARNING: Generate New Key '$SECRET_KEY_NAME'"
  echo -n '" Cancel to [Ctrl+C] Are you OK ? (Y/n) "'
  read -p ": " yn
  case "$yn" in [yY]*) ;; *) echo "abort." ; return ;; esac
  openssl genrsa -out $SECRET_KEY_NAME 2048
  openssl rsa -pubout < $SECRET_KEY_NAME > $PUBLIC_KEY_NAME
  openssl rsa -text -pubin < $PUBLIC_KEY_NAME
}

encrypt() {
  INFILE=$1
  OUTFILE=$INFILE.enc
  cat $INFILE | openssl rsautl -encrypt -pubin -inkey $PUBLIC_KEY_NAME > $OUTFILE
}

decrypt() {
  INFILE=$1
  OUTFILE=$INFILE.enc
  cat $OUTFILE | openssl rsautl -decrypt -inkey $SECRET_KEY_NAME > $INFILE.dec
}

encryptLarge() {
  INFILE=$1
  OUTFILE=$INFILE.enc
  PASSPHRASE=secret
  openssl aes-256-cbc -salt -pbkdf2 -in $INFILE -out $OUTFILE -pass pass:$PASSPHRASE
}

decryptLarge() {
  INFILE=$1
  OUTFILE=$INFILE.enc
  PASSPHRASE=secret
  openssl aes-256-cbc -d -salt -pbkdf2 -in $OUTFILE -out $INFILE.dec -pass pass:$PASSPHRASE
}

{
  THIS=${0##*/}
  grep ^[a-z] secret-script | awk -F'(' '{print $1}'
}
