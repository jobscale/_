#!/usr/bin/env bash
set -eu

TICK_FILE="/home/docker/Auto/number"
LOG_DIR="/home/docker/Auto/logs"
export GIT_PAGER=

putNumber() {
  [[ $1 =~ ^[0-9]+$ ]] || { echo "not a number: $1" >&2; exit 2; }
  ( flock -x 200 && printf '%s\n' "$1" > "$TICK_FILE" ) 200>"$TICK_FILE"
}

getNumber() {
  [[ -s "$TICK_FILE" ]] || { echo "counter empty" >&2; exit 1; }
  ( flock -s 200 && cat "$TICK_FILE" ) 200<"$TICK_FILE"
}

replace() {
  local NUMBER=$(getNumber)
  TO_NUMBER=$(( NUMBER + 1 ))
  putNumber "${TO_NUMBER}"
  local FROM="The workflow was triggered ${NUMBER} times via automatically."
  local TO="The workflow was triggered ${TO_NUMBER} times via automatically."
  sed -i "s/$FROM/$TO/" */.github/workflows/*.yml
}

loop() {
  echo "$(date -Iseconds) automatic workfrow"
  LIST=($(
    ls */.github/workflows/*.yml | awk -F/ '{print $1}' | sort | uniq
  ))

  for i in ${LIST[@]}
  do
    DIR=$i
    echo -e "###\n  $DIR\n###\n" | grep --color=auto $DIR
    cd $DIR
    git diff
    sleep 3
    git add .github
    git commit -m "github/workflow updated" -n || echo "NO commit change" | grep --color=auto "NO commit change"
    git push > /dev/null 2>&1
    cd - > /dev/null
    echo
    sleep 3
  done
}

{
  mkdir -p "${LOG_DIR}"
  cd "/home/docker"
  replace
  CMD=$(mktemp)
  echo -e '#!/usr/bin/env bash\nset -eu\n' > ${CMD}
  echo >> ${CMD}
  echo "$(type loop | tail -n +3)" >> ${CMD}
  chmod +x ${CMD}
  {
    time unbuffer ${CMD}
    echo "Exit Status Code $?"
  } > "${LOG_DIR}/workflow-$(date -Iseconds).log" 2>&1
}
