#!/usr/bin/env bash

##
## with Linux
##

eval $(cat /etc/*release)

web() {
  sudo apt install -y $(apt search php | grep "^php7" | grep -v snmp | awk -F'/' '{print $1}' | xargs) nginx nginx-extras
  rm -f /etc/nginx/sites-enabled/default
  cp -pr /var/site/projects/_/conf.d /etc/nginx
  ln -sfn /run/php/php7*sock /var/site/run/php/php-fpm.sock
  chown -R www-data. /var/log/nginx
  systemctl restart nginx
}

cli() {
  export DEBIAN_FRONTEND=noninteractive
  sudo apt update
  sudo apt install -y \
    curl dnsutils net-tools iputils-ping whois nmap traceroute \
    git subversion vim tmux dstat procps peco \
    at expect zip unzip colordiff speedtest-cli \
    cmatrix sl \
    nfs-common cifs-utils exfat-utils sshfs ecryptfs-utils
}

gui() {
  export DEBIAN_FRONTEND=noninteractive
  sudo apt update
  sudo apt install -y terminator conky polari buntu-restricted-extras \
    gnome-clocks $(apt search cinnamon | grep ^cinnamon | awk -F/ '{print $1}')
  [[ $(lsb_release -cs) == 'bionic' ]] && sudo apt install -y gimp alarm-clock-applet
}

iNodejs() {
  curl -o- https://raw.githubusercontent.com/creationix/nvm/$(
    git ls-remote --tags --refs https://github.com/nvm-sh/nvm.git | grep -P 'v0.\d\d' | tail -1 | awk -F/ '{print $3}'
  )/install.sh | bash
  . ~/.bashrc
  LATEST=$(nvm ls-remote | grep 'Latest LTS' | tail -1 | awk '{print $1}')
  nvm install $LATEST
  nvm alias default $LATEST
  nvm use $LATEST
  node --version
  npm --version
  id
}

iAws() {
  python3 -m pip install --user awscli
}

iAz() {
  python3 -m pip install --user azure-cli
}

iGcloud() {
  curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
  sudo add-apt-repository "deb http://packages.cloud.google.com/apt cloud-sdk-$(lsb_release -cs) main"
  sudo apt install -y google-cloud-sdk
}

iDocker() {
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  sudo apt install -y docker-ce apt-transport-https
  sudo usermod -aG docker $(whoami)
}

iKubectl() {
  curl -LO https://storage.googleapis.com/kubernetes-release/release/$(
    curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt
  )/bin/linux/amd64/kubectl
  chmod +x kubectl
  sudo mv kubectl /usr/local/bin
}

iKind() {
  curl -sLo kind https://github.com/kubernetes-sigs/kind/releases/download/$(
    git ls-remote --tags --refs https://github.com/kubernetes-sigs/kind.git | tail -1 | awk -F/ '{print $3}'
  )/kind-$(uname)-amd64
  chmod +x kind
  sudo mv kind /usr/local/bin
}

useFunction() {
  user=$(grep -w 1000 /etc/passwd | awk -F: '{print $1}')
  name=$1
  type $name | tail -$(echo $(type $name | wc -l)-1 | bc) > /tmp/$name
  sudo -u $user bash -c ". /tmp/$name && $name"
  rm /tmp/$name
}

account() {
  user=jobscale
  old=$(grep -w 1000 /etc/passwd | awk -F: '{print $1}')
  sudo usermod -l $user -m -d /home/$user $old
  echo "$user ALL=(ALL) NOPASSWD:ALL" | sudo tee -a /etc/sudoers.d/70-users
  sudo systemctl restart sshd
}

system() {
  sudo dd if=/dev/zero of=/var/swapfile bs=16M count=4K
  sudo chmod 0600 /var/swapfile
  sudo mkswap /var/swapfile
  sudo swapon /var/swapfile
  echo '/var/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab
  sudo mount -a
}

minimum() {
  export DEBIAN_FRONTEND=noninteractive
  apt update && apt install -y git vim tmux curl zip unzip net-tools dnsutils procps iputils-ping
}

db() {
  apt install -y mariadb-server
}

cli() {
  apt install -y \
    curl whois nmap traceroute net-tools \
    nfs-common cifs-utils exfat-utils sshfs \
    git subversion vim tmux dstat peco \
    at expect zip unzip colordiff speedtest-cli \
    mariadb-client libpng-dev nasm
}

account() {
  user=$(grep -w 1000 /etc/passwd | awk -F: '{print $1}')
  echo "$user ALL=(ALL) NOPASSWD:ALL" | tee -a /etc/sudoers.d/70-users
}

system() {
  dd if=/dev/zero of=/mnt/swap bs=2M count=512
  chmod 0600 /mnt/swap
  mkswap /mnt/swap
  swapon /mnt/swap
  echo '/mnt/swap none swap sw 0 0' | tee -a /etc/fstab
}

main() {
  date +'START    my-init %Y-%m-%d %H:%M:%S'
  [[ $(id -u) == 0 ]] && alias sudo=''
  echo installing...
  date +'FINISHED my-init %Y-%m-%d %H:%M:%S'
}
